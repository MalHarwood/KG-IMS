#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace KG_IMS.DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="KG-IMS")]
	public partial class KG_IMSDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertOPS_Rpt_Type_Section_Contents(OPS_Rpt_Type_Section_Contents instance);
    partial void UpdateOPS_Rpt_Type_Section_Contents(OPS_Rpt_Type_Section_Contents instance);
    partial void DeleteOPS_Rpt_Type_Section_Contents(OPS_Rpt_Type_Section_Contents instance);
    partial void Inserts_WBS(s_WBS instance);
    partial void Updates_WBS(s_WBS instance);
    partial void Deletes_WBS(s_WBS instance);
    partial void InsertOPS_Rpt_Type_Sections(OPS_Rpt_Type_Sections instance);
    partial void UpdateOPS_Rpt_Type_Sections(OPS_Rpt_Type_Sections instance);
    partial void DeleteOPS_Rpt_Type_Sections(OPS_Rpt_Type_Sections instance);
    partial void InsertOPS_Rpt_Types(OPS_Rpt_Types instance);
    partial void UpdateOPS_Rpt_Types(OPS_Rpt_Types instance);
    partial void DeleteOPS_Rpt_Types(OPS_Rpt_Types instance);
    partial void InsertOPS_T_Category(OPS_T_Category instance);
    partial void UpdateOPS_T_Category(OPS_T_Category instance);
    partial void DeleteOPS_T_Category(OPS_T_Category instance);
    partial void InsertOPS_T_Equipment(OPS_T_Equipment instance);
    partial void UpdateOPS_T_Equipment(OPS_T_Equipment instance);
    partial void DeleteOPS_T_Equipment(OPS_T_Equipment instance);
    partial void InsertOPS_T_Equipment_Service(OPS_T_Equipment_Service instance);
    partial void UpdateOPS_T_Equipment_Service(OPS_T_Equipment_Service instance);
    partial void DeleteOPS_T_Equipment_Service(OPS_T_Equipment_Service instance);
    partial void InsertOPS_T_EquipTypes(OPS_T_EquipTypes instance);
    partial void UpdateOPS_T_EquipTypes(OPS_T_EquipTypes instance);
    partial void DeleteOPS_T_EquipTypes(OPS_T_EquipTypes instance);
    partial void InsertOPS_T_UserSecurity(OPS_T_UserSecurity instance);
    partial void UpdateOPS_T_UserSecurity(OPS_T_UserSecurity instance);
    partial void DeleteOPS_T_UserSecurity(OPS_T_UserSecurity instance);
    partial void Inserts_Locations(s_Locations instance);
    partial void Updates_Locations(s_Locations instance);
    partial void Deletes_Locations(s_Locations instance);
    partial void Inserts_NameValue(s_NameValue instance);
    partial void Updates_NameValue(s_NameValue instance);
    partial void Deletes_NameValue(s_NameValue instance);
    partial void Inserts_People(s_People instance);
    partial void Updates_People(s_People instance);
    partial void Deletes_People(s_People instance);
    partial void Inserts_ProjectLocations(s_ProjectLocations instance);
    partial void Updates_ProjectLocations(s_ProjectLocations instance);
    partial void Deletes_ProjectLocations(s_ProjectLocations instance);
    partial void Inserts_Projects(s_Projects instance);
    partial void Updates_Projects(s_Projects instance);
    partial void Deletes_Projects(s_Projects instance);
    partial void Inserts_SecurityLevels(s_SecurityLevels instance);
    partial void Updates_SecurityLevels(s_SecurityLevels instance);
    partial void Deletes_SecurityLevels(s_SecurityLevels instance);
    #endregion
		
		public KG_IMSDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["KG_IMSConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public KG_IMSDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public KG_IMSDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public KG_IMSDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public KG_IMSDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<OPS_Rpt_Type_Section_Contents> OPS_Rpt_Type_Section_Contents
		{
			get
			{
				return this.GetTable<OPS_Rpt_Type_Section_Contents>();
			}
		}
		
		public System.Data.Linq.Table<s_WBS> s_WBS
		{
			get
			{
				return this.GetTable<s_WBS>();
			}
		}
		
		public System.Data.Linq.Table<OPS_Rpt_Type_Sections> OPS_Rpt_Type_Sections
		{
			get
			{
				return this.GetTable<OPS_Rpt_Type_Sections>();
			}
		}
		
		public System.Data.Linq.Table<OPS_Rpt_Types> OPS_Rpt_Types
		{
			get
			{
				return this.GetTable<OPS_Rpt_Types>();
			}
		}
		
		public System.Data.Linq.Table<OPS_T_Category> OPS_T_Category
		{
			get
			{
				return this.GetTable<OPS_T_Category>();
			}
		}
		
		public System.Data.Linq.Table<OPS_T_Equipment> OPS_T_Equipment
		{
			get
			{
				return this.GetTable<OPS_T_Equipment>();
			}
		}
		
		public System.Data.Linq.Table<OPS_T_Equipment_Service> OPS_T_Equipment_Service
		{
			get
			{
				return this.GetTable<OPS_T_Equipment_Service>();
			}
		}
		
		public System.Data.Linq.Table<OPS_T_EquipTypes> OPS_T_EquipTypes
		{
			get
			{
				return this.GetTable<OPS_T_EquipTypes>();
			}
		}
		
		public System.Data.Linq.Table<OPS_T_UserSecurity> OPS_T_UserSecurity
		{
			get
			{
				return this.GetTable<OPS_T_UserSecurity>();
			}
		}
		
		public System.Data.Linq.Table<s_Locations> s_Locations
		{
			get
			{
				return this.GetTable<s_Locations>();
			}
		}
		
		public System.Data.Linq.Table<s_NameValue> s_NameValue
		{
			get
			{
				return this.GetTable<s_NameValue>();
			}
		}
		
		public System.Data.Linq.Table<s_People> s_People
		{
			get
			{
				return this.GetTable<s_People>();
			}
		}
		
		public System.Data.Linq.Table<s_ProjectLocations> s_ProjectLocations
		{
			get
			{
				return this.GetTable<s_ProjectLocations>();
			}
		}
		
		public System.Data.Linq.Table<s_Projects> s_Projects
		{
			get
			{
				return this.GetTable<s_Projects>();
			}
		}
		
		public System.Data.Linq.Table<s_SecurityLevels> s_SecurityLevels
		{
			get
			{
				return this.GetTable<s_SecurityLevels>();
			}
		}
		
		public System.Data.Linq.Table<v_OPS_T_Equipment> v_OPS_T_Equipment
		{
			get
			{
				return this.GetTable<v_OPS_T_Equipment>();
			}
		}
		
		public System.Data.Linq.Table<v_PeopleRole> v_PeopleRole
		{
			get
			{
				return this.GetTable<v_PeopleRole>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OPS_Rpt_Type_Section_Contents")]
	public partial class OPS_Rpt_Type_Section_Contents : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _RptSectionTypeGUID;
		
		private string _Type;
		
		private string _ChangedBy;
		
		private System.DateTime _ChangedOn;
		
		private EntitySet<OPS_Rpt_Type_Sections> _OPS_Rpt_Type_Sections;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRptSectionTypeGUIDChanging(System.Guid value);
    partial void OnRptSectionTypeGUIDChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnChangedByChanging(string value);
    partial void OnChangedByChanged();
    partial void OnChangedOnChanging(System.DateTime value);
    partial void OnChangedOnChanged();
    #endregion
		
		public OPS_Rpt_Type_Section_Contents()
		{
			this._OPS_Rpt_Type_Sections = new EntitySet<OPS_Rpt_Type_Sections>(new Action<OPS_Rpt_Type_Sections>(this.attach_OPS_Rpt_Type_Sections), new Action<OPS_Rpt_Type_Sections>(this.detach_OPS_Rpt_Type_Sections));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RptSectionTypeGUID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RptSectionTypeGUID
		{
			get
			{
				return this._RptSectionTypeGUID;
			}
			set
			{
				if ((this._RptSectionTypeGUID != value))
				{
					this.OnRptSectionTypeGUIDChanging(value);
					this.SendPropertyChanging();
					this._RptSectionTypeGUID = value;
					this.SendPropertyChanged("RptSectionTypeGUID");
					this.OnRptSectionTypeGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ChangedBy
		{
			get
			{
				return this._ChangedBy;
			}
			set
			{
				if ((this._ChangedBy != value))
				{
					this.OnChangedByChanging(value);
					this.SendPropertyChanging();
					this._ChangedBy = value;
					this.SendPropertyChanged("ChangedBy");
					this.OnChangedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedOn", DbType="DateTime NOT NULL")]
		public System.DateTime ChangedOn
		{
			get
			{
				return this._ChangedOn;
			}
			set
			{
				if ((this._ChangedOn != value))
				{
					this.OnChangedOnChanging(value);
					this.SendPropertyChanging();
					this._ChangedOn = value;
					this.SendPropertyChanged("ChangedOn");
					this.OnChangedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OPS_Rpt_Type_Section_Contents_OPS_Rpt_Type_Sections", Storage="_OPS_Rpt_Type_Sections", ThisKey="RptSectionTypeGUID", OtherKey="RptSectionTypeGUID")]
		public EntitySet<OPS_Rpt_Type_Sections> OPS_Rpt_Type_Sections
		{
			get
			{
				return this._OPS_Rpt_Type_Sections;
			}
			set
			{
				this._OPS_Rpt_Type_Sections.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OPS_Rpt_Type_Sections(OPS_Rpt_Type_Sections entity)
		{
			this.SendPropertyChanging();
			entity.OPS_Rpt_Type_Section_Contents = this;
		}
		
		private void detach_OPS_Rpt_Type_Sections(OPS_Rpt_Type_Sections entity)
		{
			this.SendPropertyChanging();
			entity.OPS_Rpt_Type_Section_Contents = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.s_WBS")]
	public partial class s_WBS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _WBSGUID;
		
		private System.Guid _ProjGUID;
		
		private int _Level;
		
		private int _SortOrder;
		
		private string _Description;
		
		private System.Nullable<System.DateTime> _DueDate;
		
		private System.Nullable<System.DateTime> _CompletedDate;
		
		private string _ChangedBy;
		
		private System.DateTime _ChangedOn;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private EntityRef<s_Projects> _s_Projects;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWBSGUIDChanging(System.Guid value);
    partial void OnWBSGUIDChanged();
    partial void OnProjGUIDChanging(System.Guid value);
    partial void OnProjGUIDChanged();
    partial void OnLevelChanging(int value);
    partial void OnLevelChanged();
    partial void OnSortOrderChanging(int value);
    partial void OnSortOrderChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDueDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDueDateChanged();
    partial void OnCompletedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompletedDateChanged();
    partial void OnChangedByChanging(string value);
    partial void OnChangedByChanged();
    partial void OnChangedOnChanging(System.DateTime value);
    partial void OnChangedOnChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    #endregion
		
		public s_WBS()
		{
			this._s_Projects = default(EntityRef<s_Projects>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WBSGUID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid WBSGUID
		{
			get
			{
				return this._WBSGUID;
			}
			set
			{
				if ((this._WBSGUID != value))
				{
					this.OnWBSGUIDChanging(value);
					this.SendPropertyChanging();
					this._WBSGUID = value;
					this.SendPropertyChanged("WBSGUID");
					this.OnWBSGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjGUID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ProjGUID
		{
			get
			{
				return this._ProjGUID;
			}
			set
			{
				if ((this._ProjGUID != value))
				{
					if (this._s_Projects.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjGUIDChanging(value);
					this.SendPropertyChanging();
					this._ProjGUID = value;
					this.SendPropertyChanged("ProjGUID");
					this.OnProjGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Level]", Storage="_Level", DbType="Int NOT NULL")]
		public int Level
		{
			get
			{
				return this._Level;
			}
			set
			{
				if ((this._Level != value))
				{
					this.OnLevelChanging(value);
					this.SendPropertyChanging();
					this._Level = value;
					this.SendPropertyChanged("Level");
					this.OnLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int NOT NULL")]
		public int SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DueDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DueDate
		{
			get
			{
				return this._DueDate;
			}
			set
			{
				if ((this._DueDate != value))
				{
					this.OnDueDateChanging(value);
					this.SendPropertyChanging();
					this._DueDate = value;
					this.SendPropertyChanged("DueDate");
					this.OnDueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompletedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompletedDate
		{
			get
			{
				return this._CompletedDate;
			}
			set
			{
				if ((this._CompletedDate != value))
				{
					this.OnCompletedDateChanging(value);
					this.SendPropertyChanging();
					this._CompletedDate = value;
					this.SendPropertyChanged("CompletedDate");
					this.OnCompletedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ChangedBy
		{
			get
			{
				return this._ChangedBy;
			}
			set
			{
				if ((this._ChangedBy != value))
				{
					this.OnChangedByChanging(value);
					this.SendPropertyChanging();
					this._ChangedBy = value;
					this.SendPropertyChanged("ChangedBy");
					this.OnChangedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedOn", DbType="DateTime NOT NULL")]
		public System.DateTime ChangedOn
		{
			get
			{
				return this._ChangedOn;
			}
			set
			{
				if ((this._ChangedOn != value))
				{
					this.OnChangedOnChanging(value);
					this.SendPropertyChanging();
					this._ChangedOn = value;
					this.SendPropertyChanged("ChangedOn");
					this.OnChangedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="Date")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="s_Projects_s_WBS", Storage="_s_Projects", ThisKey="ProjGUID", OtherKey="ProjGUID", IsForeignKey=true)]
		public s_Projects s_Projects
		{
			get
			{
				return this._s_Projects.Entity;
			}
			set
			{
				s_Projects previousValue = this._s_Projects.Entity;
				if (((previousValue != value) 
							|| (this._s_Projects.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._s_Projects.Entity = null;
						previousValue.s_WBS.Remove(this);
					}
					this._s_Projects.Entity = value;
					if ((value != null))
					{
						value.s_WBS.Add(this);
						this._ProjGUID = value.ProjGUID;
					}
					else
					{
						this._ProjGUID = default(System.Guid);
					}
					this.SendPropertyChanged("s_Projects");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OPS_Rpt_Type_Sections")]
	public partial class OPS_Rpt_Type_Sections : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _RPT_Type_SectionGUID;
		
		private System.Guid _ParentGUID;
		
		private System.Nullable<int> _SectionNumber;
		
		private string _Title;
		
		private System.Guid _RptSectionTypeGUID;
		
		private bool _Active;
		
		private string _ChangedBy;
		
		private System.DateTime _ChangedOn;
		
		private EntityRef<OPS_Rpt_Type_Section_Contents> _OPS_Rpt_Type_Section_Contents;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRPT_Type_SectionGUIDChanging(System.Guid value);
    partial void OnRPT_Type_SectionGUIDChanged();
    partial void OnParentGUIDChanging(System.Guid value);
    partial void OnParentGUIDChanged();
    partial void OnSectionNumberChanging(System.Nullable<int> value);
    partial void OnSectionNumberChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnRptSectionTypeGUIDChanging(System.Guid value);
    partial void OnRptSectionTypeGUIDChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnChangedByChanging(string value);
    partial void OnChangedByChanged();
    partial void OnChangedOnChanging(System.DateTime value);
    partial void OnChangedOnChanged();
    #endregion
		
		public OPS_Rpt_Type_Sections()
		{
			this._OPS_Rpt_Type_Section_Contents = default(EntityRef<OPS_Rpt_Type_Section_Contents>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RPT_Type_SectionGUID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RPT_Type_SectionGUID
		{
			get
			{
				return this._RPT_Type_SectionGUID;
			}
			set
			{
				if ((this._RPT_Type_SectionGUID != value))
				{
					this.OnRPT_Type_SectionGUIDChanging(value);
					this.SendPropertyChanging();
					this._RPT_Type_SectionGUID = value;
					this.SendPropertyChanged("RPT_Type_SectionGUID");
					this.OnRPT_Type_SectionGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentGUID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ParentGUID
		{
			get
			{
				return this._ParentGUID;
			}
			set
			{
				if ((this._ParentGUID != value))
				{
					this.OnParentGUIDChanging(value);
					this.SendPropertyChanging();
					this._ParentGUID = value;
					this.SendPropertyChanged("ParentGUID");
					this.OnParentGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectionNumber", DbType="Int")]
		public System.Nullable<int> SectionNumber
		{
			get
			{
				return this._SectionNumber;
			}
			set
			{
				if ((this._SectionNumber != value))
				{
					this.OnSectionNumberChanging(value);
					this.SendPropertyChanging();
					this._SectionNumber = value;
					this.SendPropertyChanged("SectionNumber");
					this.OnSectionNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RptSectionTypeGUID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid RptSectionTypeGUID
		{
			get
			{
				return this._RptSectionTypeGUID;
			}
			set
			{
				if ((this._RptSectionTypeGUID != value))
				{
					if (this._OPS_Rpt_Type_Section_Contents.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRptSectionTypeGUIDChanging(value);
					this.SendPropertyChanging();
					this._RptSectionTypeGUID = value;
					this.SendPropertyChanged("RptSectionTypeGUID");
					this.OnRptSectionTypeGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ChangedBy
		{
			get
			{
				return this._ChangedBy;
			}
			set
			{
				if ((this._ChangedBy != value))
				{
					this.OnChangedByChanging(value);
					this.SendPropertyChanging();
					this._ChangedBy = value;
					this.SendPropertyChanged("ChangedBy");
					this.OnChangedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedOn", DbType="DateTime NOT NULL")]
		public System.DateTime ChangedOn
		{
			get
			{
				return this._ChangedOn;
			}
			set
			{
				if ((this._ChangedOn != value))
				{
					this.OnChangedOnChanging(value);
					this.SendPropertyChanging();
					this._ChangedOn = value;
					this.SendPropertyChanged("ChangedOn");
					this.OnChangedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OPS_Rpt_Type_Section_Contents_OPS_Rpt_Type_Sections", Storage="_OPS_Rpt_Type_Section_Contents", ThisKey="RptSectionTypeGUID", OtherKey="RptSectionTypeGUID", IsForeignKey=true)]
		public OPS_Rpt_Type_Section_Contents OPS_Rpt_Type_Section_Contents
		{
			get
			{
				return this._OPS_Rpt_Type_Section_Contents.Entity;
			}
			set
			{
				OPS_Rpt_Type_Section_Contents previousValue = this._OPS_Rpt_Type_Section_Contents.Entity;
				if (((previousValue != value) 
							|| (this._OPS_Rpt_Type_Section_Contents.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OPS_Rpt_Type_Section_Contents.Entity = null;
						previousValue.OPS_Rpt_Type_Sections.Remove(this);
					}
					this._OPS_Rpt_Type_Section_Contents.Entity = value;
					if ((value != null))
					{
						value.OPS_Rpt_Type_Sections.Add(this);
						this._RptSectionTypeGUID = value.RptSectionTypeGUID;
					}
					else
					{
						this._RptSectionTypeGUID = default(System.Guid);
					}
					this.SendPropertyChanged("OPS_Rpt_Type_Section_Contents");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OPS_Rpt_Types")]
	public partial class OPS_Rpt_Types : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _RptTypeGUID;
		
		private string _Name;
		
		private System.DateTime _SeedDate;
		
		private string _Frequency;
		
		private bool _Active;
		
		private string _ChangedBy;
		
		private System.DateTime _ChangedOn;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRptTypeGUIDChanging(System.Guid value);
    partial void OnRptTypeGUIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSeedDateChanging(System.DateTime value);
    partial void OnSeedDateChanged();
    partial void OnFrequencyChanging(string value);
    partial void OnFrequencyChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnChangedByChanging(string value);
    partial void OnChangedByChanged();
    partial void OnChangedOnChanging(System.DateTime value);
    partial void OnChangedOnChanged();
    #endregion
		
		public OPS_Rpt_Types()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RptTypeGUID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RptTypeGUID
		{
			get
			{
				return this._RptTypeGUID;
			}
			set
			{
				if ((this._RptTypeGUID != value))
				{
					this.OnRptTypeGUIDChanging(value);
					this.SendPropertyChanging();
					this._RptTypeGUID = value;
					this.SendPropertyChanged("RptTypeGUID");
					this.OnRptTypeGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeedDate", DbType="Date NOT NULL")]
		public System.DateTime SeedDate
		{
			get
			{
				return this._SeedDate;
			}
			set
			{
				if ((this._SeedDate != value))
				{
					this.OnSeedDateChanging(value);
					this.SendPropertyChanging();
					this._SeedDate = value;
					this.SendPropertyChanged("SeedDate");
					this.OnSeedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Frequency", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Frequency
		{
			get
			{
				return this._Frequency;
			}
			set
			{
				if ((this._Frequency != value))
				{
					this.OnFrequencyChanging(value);
					this.SendPropertyChanging();
					this._Frequency = value;
					this.SendPropertyChanged("Frequency");
					this.OnFrequencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ChangedBy
		{
			get
			{
				return this._ChangedBy;
			}
			set
			{
				if ((this._ChangedBy != value))
				{
					this.OnChangedByChanging(value);
					this.SendPropertyChanging();
					this._ChangedBy = value;
					this.SendPropertyChanged("ChangedBy");
					this.OnChangedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedOn", DbType="DateTime NOT NULL")]
		public System.DateTime ChangedOn
		{
			get
			{
				return this._ChangedOn;
			}
			set
			{
				if ((this._ChangedOn != value))
				{
					this.OnChangedOnChanging(value);
					this.SendPropertyChanging();
					this._ChangedOn = value;
					this.SendPropertyChanged("ChangedOn");
					this.OnChangedOnChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OPS_T_Category")]
	public partial class OPS_T_Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _CategoryGUID;
		
		private System.Nullable<System.Guid> _EquipTypeGUID;
		
		private string _Category;
		
		private string _Description;
		
		private string _ChangedBy;
		
		private System.DateTime _ChangedOn;
		
		private EntitySet<OPS_T_Equipment> _OPS_T_Equipment;
		
		private EntityRef<OPS_T_EquipTypes> _OPS_T_EquipTypes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCategoryGUIDChanging(System.Guid value);
    partial void OnCategoryGUIDChanged();
    partial void OnEquipTypeGUIDChanging(System.Nullable<System.Guid> value);
    partial void OnEquipTypeGUIDChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnChangedByChanging(string value);
    partial void OnChangedByChanged();
    partial void OnChangedOnChanging(System.DateTime value);
    partial void OnChangedOnChanged();
    #endregion
		
		public OPS_T_Category()
		{
			this._OPS_T_Equipment = new EntitySet<OPS_T_Equipment>(new Action<OPS_T_Equipment>(this.attach_OPS_T_Equipment), new Action<OPS_T_Equipment>(this.detach_OPS_T_Equipment));
			this._OPS_T_EquipTypes = default(EntityRef<OPS_T_EquipTypes>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryGUID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid CategoryGUID
		{
			get
			{
				return this._CategoryGUID;
			}
			set
			{
				if ((this._CategoryGUID != value))
				{
					this.OnCategoryGUIDChanging(value);
					this.SendPropertyChanging();
					this._CategoryGUID = value;
					this.SendPropertyChanged("CategoryGUID");
					this.OnCategoryGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EquipTypeGUID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> EquipTypeGUID
		{
			get
			{
				return this._EquipTypeGUID;
			}
			set
			{
				if ((this._EquipTypeGUID != value))
				{
					if (this._OPS_T_EquipTypes.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEquipTypeGUIDChanging(value);
					this.SendPropertyChanging();
					this._EquipTypeGUID = value;
					this.SendPropertyChanged("EquipTypeGUID");
					this.OnEquipTypeGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="NVarChar(50)")]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ChangedBy
		{
			get
			{
				return this._ChangedBy;
			}
			set
			{
				if ((this._ChangedBy != value))
				{
					this.OnChangedByChanging(value);
					this.SendPropertyChanging();
					this._ChangedBy = value;
					this.SendPropertyChanged("ChangedBy");
					this.OnChangedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedOn", DbType="DateTime NOT NULL")]
		public System.DateTime ChangedOn
		{
			get
			{
				return this._ChangedOn;
			}
			set
			{
				if ((this._ChangedOn != value))
				{
					this.OnChangedOnChanging(value);
					this.SendPropertyChanging();
					this._ChangedOn = value;
					this.SendPropertyChanged("ChangedOn");
					this.OnChangedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OPS_T_Category_OPS_T_Equipment", Storage="_OPS_T_Equipment", ThisKey="CategoryGUID", OtherKey="CategoryGUID")]
		public EntitySet<OPS_T_Equipment> OPS_T_Equipment
		{
			get
			{
				return this._OPS_T_Equipment;
			}
			set
			{
				this._OPS_T_Equipment.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OPS_T_EquipTypes_OPS_T_Category", Storage="_OPS_T_EquipTypes", ThisKey="EquipTypeGUID", OtherKey="EquipTypeGUID", IsForeignKey=true)]
		public OPS_T_EquipTypes OPS_T_EquipTypes
		{
			get
			{
				return this._OPS_T_EquipTypes.Entity;
			}
			set
			{
				OPS_T_EquipTypes previousValue = this._OPS_T_EquipTypes.Entity;
				if (((previousValue != value) 
							|| (this._OPS_T_EquipTypes.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OPS_T_EquipTypes.Entity = null;
						previousValue.OPS_T_Category.Remove(this);
					}
					this._OPS_T_EquipTypes.Entity = value;
					if ((value != null))
					{
						value.OPS_T_Category.Add(this);
						this._EquipTypeGUID = value.EquipTypeGUID;
					}
					else
					{
						this._EquipTypeGUID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("OPS_T_EquipTypes");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OPS_T_Equipment(OPS_T_Equipment entity)
		{
			this.SendPropertyChanging();
			entity.OPS_T_Category = this;
		}
		
		private void detach_OPS_T_Equipment(OPS_T_Equipment entity)
		{
			this.SendPropertyChanging();
			entity.OPS_T_Category = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OPS_T_Equipment")]
	public partial class OPS_T_Equipment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _EquipGUID;
		
		private string _KGID;
		
		private string _Description;
		
		private System.Guid _CategoryGUID;
		
		private System.Guid _LocationGUID;
		
		private string _SerialNumber;
		
		private string _Supplier;
		
		private System.Nullable<double> _PurchasePrice;
		
		private string _Certificate;
		
		private System.Nullable<bool> _InService;
		
		private System.Nullable<System.DateTime> _PurchaseDate;
		
		private System.Nullable<System.Guid> _EquipTypeGUID;
		
		private string _ChangedBy;
		
		private System.DateTime _ChangedOn;
		
		private EntitySet<OPS_T_Equipment_Service> _OPS_T_Equipment_Service;
		
		private EntityRef<OPS_T_Category> _OPS_T_Category;
		
		private EntityRef<OPS_T_EquipTypes> _OPS_T_EquipTypes;
		
		private EntityRef<s_Locations> _s_Locations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEquipGUIDChanging(System.Guid value);
    partial void OnEquipGUIDChanged();
    partial void OnKGIDChanging(string value);
    partial void OnKGIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCategoryGUIDChanging(System.Guid value);
    partial void OnCategoryGUIDChanged();
    partial void OnLocationGUIDChanging(System.Guid value);
    partial void OnLocationGUIDChanged();
    partial void OnSerialNumberChanging(string value);
    partial void OnSerialNumberChanged();
    partial void OnSupplierChanging(string value);
    partial void OnSupplierChanged();
    partial void OnPurchasePriceChanging(System.Nullable<double> value);
    partial void OnPurchasePriceChanged();
    partial void OnCertificateChanging(string value);
    partial void OnCertificateChanged();
    partial void OnInServiceChanging(System.Nullable<bool> value);
    partial void OnInServiceChanged();
    partial void OnPurchaseDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPurchaseDateChanged();
    partial void OnEquipTypeGUIDChanging(System.Nullable<System.Guid> value);
    partial void OnEquipTypeGUIDChanged();
    partial void OnChangedByChanging(string value);
    partial void OnChangedByChanged();
    partial void OnChangedOnChanging(System.DateTime value);
    partial void OnChangedOnChanged();
    #endregion
		
		public OPS_T_Equipment()
		{
			this._OPS_T_Equipment_Service = new EntitySet<OPS_T_Equipment_Service>(new Action<OPS_T_Equipment_Service>(this.attach_OPS_T_Equipment_Service), new Action<OPS_T_Equipment_Service>(this.detach_OPS_T_Equipment_Service));
			this._OPS_T_Category = default(EntityRef<OPS_T_Category>);
			this._OPS_T_EquipTypes = default(EntityRef<OPS_T_EquipTypes>);
			this._s_Locations = default(EntityRef<s_Locations>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EquipGUID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid EquipGUID
		{
			get
			{
				return this._EquipGUID;
			}
			set
			{
				if ((this._EquipGUID != value))
				{
					this.OnEquipGUIDChanging(value);
					this.SendPropertyChanging();
					this._EquipGUID = value;
					this.SendPropertyChanged("EquipGUID");
					this.OnEquipGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KGID", DbType="NVarChar(255)")]
		public string KGID
		{
			get
			{
				return this._KGID;
			}
			set
			{
				if ((this._KGID != value))
				{
					this.OnKGIDChanging(value);
					this.SendPropertyChanging();
					this._KGID = value;
					this.SendPropertyChanged("KGID");
					this.OnKGIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryGUID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid CategoryGUID
		{
			get
			{
				return this._CategoryGUID;
			}
			set
			{
				if ((this._CategoryGUID != value))
				{
					if (this._OPS_T_Category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryGUIDChanging(value);
					this.SendPropertyChanging();
					this._CategoryGUID = value;
					this.SendPropertyChanged("CategoryGUID");
					this.OnCategoryGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationGUID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid LocationGUID
		{
			get
			{
				return this._LocationGUID;
			}
			set
			{
				if ((this._LocationGUID != value))
				{
					if (this._s_Locations.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLocationGUIDChanging(value);
					this.SendPropertyChanging();
					this._LocationGUID = value;
					this.SendPropertyChanged("LocationGUID");
					this.OnLocationGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerialNumber", DbType="NVarChar(255)")]
		public string SerialNumber
		{
			get
			{
				return this._SerialNumber;
			}
			set
			{
				if ((this._SerialNumber != value))
				{
					this.OnSerialNumberChanging(value);
					this.SendPropertyChanging();
					this._SerialNumber = value;
					this.SendPropertyChanged("SerialNumber");
					this.OnSerialNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Supplier", DbType="NVarChar(255)")]
		public string Supplier
		{
			get
			{
				return this._Supplier;
			}
			set
			{
				if ((this._Supplier != value))
				{
					this.OnSupplierChanging(value);
					this.SendPropertyChanging();
					this._Supplier = value;
					this.SendPropertyChanged("Supplier");
					this.OnSupplierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchasePrice", DbType="Float")]
		public System.Nullable<double> PurchasePrice
		{
			get
			{
				return this._PurchasePrice;
			}
			set
			{
				if ((this._PurchasePrice != value))
				{
					this.OnPurchasePriceChanging(value);
					this.SendPropertyChanging();
					this._PurchasePrice = value;
					this.SendPropertyChanged("PurchasePrice");
					this.OnPurchasePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Certificate", DbType="NVarChar(255)")]
		public string Certificate
		{
			get
			{
				return this._Certificate;
			}
			set
			{
				if ((this._Certificate != value))
				{
					this.OnCertificateChanging(value);
					this.SendPropertyChanging();
					this._Certificate = value;
					this.SendPropertyChanged("Certificate");
					this.OnCertificateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InService", DbType="Bit")]
		public System.Nullable<bool> InService
		{
			get
			{
				return this._InService;
			}
			set
			{
				if ((this._InService != value))
				{
					this.OnInServiceChanging(value);
					this.SendPropertyChanging();
					this._InService = value;
					this.SendPropertyChanged("InService");
					this.OnInServiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PurchaseDate
		{
			get
			{
				return this._PurchaseDate;
			}
			set
			{
				if ((this._PurchaseDate != value))
				{
					this.OnPurchaseDateChanging(value);
					this.SendPropertyChanging();
					this._PurchaseDate = value;
					this.SendPropertyChanged("PurchaseDate");
					this.OnPurchaseDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EquipTypeGUID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> EquipTypeGUID
		{
			get
			{
				return this._EquipTypeGUID;
			}
			set
			{
				if ((this._EquipTypeGUID != value))
				{
					if (this._OPS_T_EquipTypes.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEquipTypeGUIDChanging(value);
					this.SendPropertyChanging();
					this._EquipTypeGUID = value;
					this.SendPropertyChanged("EquipTypeGUID");
					this.OnEquipTypeGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ChangedBy
		{
			get
			{
				return this._ChangedBy;
			}
			set
			{
				if ((this._ChangedBy != value))
				{
					this.OnChangedByChanging(value);
					this.SendPropertyChanging();
					this._ChangedBy = value;
					this.SendPropertyChanged("ChangedBy");
					this.OnChangedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedOn", DbType="DateTime NOT NULL")]
		public System.DateTime ChangedOn
		{
			get
			{
				return this._ChangedOn;
			}
			set
			{
				if ((this._ChangedOn != value))
				{
					this.OnChangedOnChanging(value);
					this.SendPropertyChanging();
					this._ChangedOn = value;
					this.SendPropertyChanged("ChangedOn");
					this.OnChangedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OPS_T_Equipment_OPS_T_Equipment_Service", Storage="_OPS_T_Equipment_Service", ThisKey="EquipGUID", OtherKey="EquipGUID")]
		public EntitySet<OPS_T_Equipment_Service> OPS_T_Equipment_Service
		{
			get
			{
				return this._OPS_T_Equipment_Service;
			}
			set
			{
				this._OPS_T_Equipment_Service.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OPS_T_Category_OPS_T_Equipment", Storage="_OPS_T_Category", ThisKey="CategoryGUID", OtherKey="CategoryGUID", IsForeignKey=true)]
		public OPS_T_Category OPS_T_Category
		{
			get
			{
				return this._OPS_T_Category.Entity;
			}
			set
			{
				OPS_T_Category previousValue = this._OPS_T_Category.Entity;
				if (((previousValue != value) 
							|| (this._OPS_T_Category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OPS_T_Category.Entity = null;
						previousValue.OPS_T_Equipment.Remove(this);
					}
					this._OPS_T_Category.Entity = value;
					if ((value != null))
					{
						value.OPS_T_Equipment.Add(this);
						this._CategoryGUID = value.CategoryGUID;
					}
					else
					{
						this._CategoryGUID = default(System.Guid);
					}
					this.SendPropertyChanged("OPS_T_Category");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OPS_T_EquipTypes_OPS_T_Equipment", Storage="_OPS_T_EquipTypes", ThisKey="EquipTypeGUID", OtherKey="EquipTypeGUID", IsForeignKey=true)]
		public OPS_T_EquipTypes OPS_T_EquipTypes
		{
			get
			{
				return this._OPS_T_EquipTypes.Entity;
			}
			set
			{
				OPS_T_EquipTypes previousValue = this._OPS_T_EquipTypes.Entity;
				if (((previousValue != value) 
							|| (this._OPS_T_EquipTypes.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OPS_T_EquipTypes.Entity = null;
						previousValue.OPS_T_Equipment.Remove(this);
					}
					this._OPS_T_EquipTypes.Entity = value;
					if ((value != null))
					{
						value.OPS_T_Equipment.Add(this);
						this._EquipTypeGUID = value.EquipTypeGUID;
					}
					else
					{
						this._EquipTypeGUID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("OPS_T_EquipTypes");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="s_Locations_OPS_T_Equipment", Storage="_s_Locations", ThisKey="LocationGUID", OtherKey="LocationGUID", IsForeignKey=true)]
		public s_Locations s_Locations
		{
			get
			{
				return this._s_Locations.Entity;
			}
			set
			{
				s_Locations previousValue = this._s_Locations.Entity;
				if (((previousValue != value) 
							|| (this._s_Locations.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._s_Locations.Entity = null;
						previousValue.OPS_T_Equipment.Remove(this);
					}
					this._s_Locations.Entity = value;
					if ((value != null))
					{
						value.OPS_T_Equipment.Add(this);
						this._LocationGUID = value.LocationGUID;
					}
					else
					{
						this._LocationGUID = default(System.Guid);
					}
					this.SendPropertyChanged("s_Locations");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OPS_T_Equipment_Service(OPS_T_Equipment_Service entity)
		{
			this.SendPropertyChanging();
			entity.OPS_T_Equipment = this;
		}
		
		private void detach_OPS_T_Equipment_Service(OPS_T_Equipment_Service entity)
		{
			this.SendPropertyChanging();
			entity.OPS_T_Equipment = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OPS_T_Equipment_Service")]
	public partial class OPS_T_Equipment_Service : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ServiceGUID;
		
		private System.Nullable<System.Guid> _EquipGUID;
		
		private System.Nullable<System.DateTime> _ServiceDate;
		
		private string _SeviceName;
		
		private string _Comment;
		
		private System.Nullable<bool> _Tagged;
		
		private string _ChangedBy;
		
		private System.DateTime _ChangedOn;
		
		private EntityRef<OPS_T_Equipment> _OPS_T_Equipment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnServiceGUIDChanging(System.Guid value);
    partial void OnServiceGUIDChanged();
    partial void OnEquipGUIDChanging(System.Nullable<System.Guid> value);
    partial void OnEquipGUIDChanged();
    partial void OnServiceDateChanging(System.Nullable<System.DateTime> value);
    partial void OnServiceDateChanged();
    partial void OnSeviceNameChanging(string value);
    partial void OnSeviceNameChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnTaggedChanging(System.Nullable<bool> value);
    partial void OnTaggedChanged();
    partial void OnChangedByChanging(string value);
    partial void OnChangedByChanged();
    partial void OnChangedOnChanging(System.DateTime value);
    partial void OnChangedOnChanged();
    #endregion
		
		public OPS_T_Equipment_Service()
		{
			this._OPS_T_Equipment = default(EntityRef<OPS_T_Equipment>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceGUID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ServiceGUID
		{
			get
			{
				return this._ServiceGUID;
			}
			set
			{
				if ((this._ServiceGUID != value))
				{
					this.OnServiceGUIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceGUID = value;
					this.SendPropertyChanged("ServiceGUID");
					this.OnServiceGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EquipGUID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> EquipGUID
		{
			get
			{
				return this._EquipGUID;
			}
			set
			{
				if ((this._EquipGUID != value))
				{
					if (this._OPS_T_Equipment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEquipGUIDChanging(value);
					this.SendPropertyChanging();
					this._EquipGUID = value;
					this.SendPropertyChanged("EquipGUID");
					this.OnEquipGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ServiceDate
		{
			get
			{
				return this._ServiceDate;
			}
			set
			{
				if ((this._ServiceDate != value))
				{
					this.OnServiceDateChanging(value);
					this.SendPropertyChanging();
					this._ServiceDate = value;
					this.SendPropertyChanged("ServiceDate");
					this.OnServiceDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeviceName", DbType="NVarChar(255)")]
		public string SeviceName
		{
			get
			{
				return this._SeviceName;
			}
			set
			{
				if ((this._SeviceName != value))
				{
					this.OnSeviceNameChanging(value);
					this.SendPropertyChanging();
					this._SeviceName = value;
					this.SendPropertyChanged("SeviceName");
					this.OnSeviceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(255)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tagged", DbType="Bit")]
		public System.Nullable<bool> Tagged
		{
			get
			{
				return this._Tagged;
			}
			set
			{
				if ((this._Tagged != value))
				{
					this.OnTaggedChanging(value);
					this.SendPropertyChanging();
					this._Tagged = value;
					this.SendPropertyChanged("Tagged");
					this.OnTaggedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ChangedBy
		{
			get
			{
				return this._ChangedBy;
			}
			set
			{
				if ((this._ChangedBy != value))
				{
					this.OnChangedByChanging(value);
					this.SendPropertyChanging();
					this._ChangedBy = value;
					this.SendPropertyChanged("ChangedBy");
					this.OnChangedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedOn", DbType="DateTime NOT NULL")]
		public System.DateTime ChangedOn
		{
			get
			{
				return this._ChangedOn;
			}
			set
			{
				if ((this._ChangedOn != value))
				{
					this.OnChangedOnChanging(value);
					this.SendPropertyChanging();
					this._ChangedOn = value;
					this.SendPropertyChanged("ChangedOn");
					this.OnChangedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OPS_T_Equipment_OPS_T_Equipment_Service", Storage="_OPS_T_Equipment", ThisKey="EquipGUID", OtherKey="EquipGUID", IsForeignKey=true)]
		public OPS_T_Equipment OPS_T_Equipment
		{
			get
			{
				return this._OPS_T_Equipment.Entity;
			}
			set
			{
				OPS_T_Equipment previousValue = this._OPS_T_Equipment.Entity;
				if (((previousValue != value) 
							|| (this._OPS_T_Equipment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OPS_T_Equipment.Entity = null;
						previousValue.OPS_T_Equipment_Service.Remove(this);
					}
					this._OPS_T_Equipment.Entity = value;
					if ((value != null))
					{
						value.OPS_T_Equipment_Service.Add(this);
						this._EquipGUID = value.EquipGUID;
					}
					else
					{
						this._EquipGUID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("OPS_T_Equipment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OPS_T_EquipTypes")]
	public partial class OPS_T_EquipTypes : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _EquipTypeGUID;
		
		private string _Type;
		
		private string _Description;
		
		private string _ChangedBy;
		
		private System.DateTime _ChangedOn;
		
		private EntitySet<OPS_T_Category> _OPS_T_Category;
		
		private EntitySet<OPS_T_Equipment> _OPS_T_Equipment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEquipTypeGUIDChanging(System.Guid value);
    partial void OnEquipTypeGUIDChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnChangedByChanging(string value);
    partial void OnChangedByChanged();
    partial void OnChangedOnChanging(System.DateTime value);
    partial void OnChangedOnChanged();
    #endregion
		
		public OPS_T_EquipTypes()
		{
			this._OPS_T_Category = new EntitySet<OPS_T_Category>(new Action<OPS_T_Category>(this.attach_OPS_T_Category), new Action<OPS_T_Category>(this.detach_OPS_T_Category));
			this._OPS_T_Equipment = new EntitySet<OPS_T_Equipment>(new Action<OPS_T_Equipment>(this.attach_OPS_T_Equipment), new Action<OPS_T_Equipment>(this.detach_OPS_T_Equipment));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EquipTypeGUID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid EquipTypeGUID
		{
			get
			{
				return this._EquipTypeGUID;
			}
			set
			{
				if ((this._EquipTypeGUID != value))
				{
					this.OnEquipTypeGUIDChanging(value);
					this.SendPropertyChanging();
					this._EquipTypeGUID = value;
					this.SendPropertyChanged("EquipTypeGUID");
					this.OnEquipTypeGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(50)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ChangedBy
		{
			get
			{
				return this._ChangedBy;
			}
			set
			{
				if ((this._ChangedBy != value))
				{
					this.OnChangedByChanging(value);
					this.SendPropertyChanging();
					this._ChangedBy = value;
					this.SendPropertyChanged("ChangedBy");
					this.OnChangedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedOn", DbType="DateTime NOT NULL")]
		public System.DateTime ChangedOn
		{
			get
			{
				return this._ChangedOn;
			}
			set
			{
				if ((this._ChangedOn != value))
				{
					this.OnChangedOnChanging(value);
					this.SendPropertyChanging();
					this._ChangedOn = value;
					this.SendPropertyChanged("ChangedOn");
					this.OnChangedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OPS_T_EquipTypes_OPS_T_Category", Storage="_OPS_T_Category", ThisKey="EquipTypeGUID", OtherKey="EquipTypeGUID")]
		public EntitySet<OPS_T_Category> OPS_T_Category
		{
			get
			{
				return this._OPS_T_Category;
			}
			set
			{
				this._OPS_T_Category.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OPS_T_EquipTypes_OPS_T_Equipment", Storage="_OPS_T_Equipment", ThisKey="EquipTypeGUID", OtherKey="EquipTypeGUID")]
		public EntitySet<OPS_T_Equipment> OPS_T_Equipment
		{
			get
			{
				return this._OPS_T_Equipment;
			}
			set
			{
				this._OPS_T_Equipment.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OPS_T_Category(OPS_T_Category entity)
		{
			this.SendPropertyChanging();
			entity.OPS_T_EquipTypes = this;
		}
		
		private void detach_OPS_T_Category(OPS_T_Category entity)
		{
			this.SendPropertyChanging();
			entity.OPS_T_EquipTypes = null;
		}
		
		private void attach_OPS_T_Equipment(OPS_T_Equipment entity)
		{
			this.SendPropertyChanging();
			entity.OPS_T_EquipTypes = this;
		}
		
		private void detach_OPS_T_Equipment(OPS_T_Equipment entity)
		{
			this.SendPropertyChanging();
			entity.OPS_T_EquipTypes = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OPS_T_UserSecurity")]
	public partial class OPS_T_UserSecurity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _GUID;
		
		private string _Username;
		
		private System.Nullable<int> _SecurityLevelID;
		
		private string _ChangedBy;
		
		private System.DateTime _ChangedOn;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGUIDChanging(System.Guid value);
    partial void OnGUIDChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnSecurityLevelIDChanging(System.Nullable<int> value);
    partial void OnSecurityLevelIDChanged();
    partial void OnChangedByChanging(string value);
    partial void OnChangedByChanged();
    partial void OnChangedOnChanging(System.DateTime value);
    partial void OnChangedOnChanged();
    #endregion
		
		public OPS_T_UserSecurity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GUID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid GUID
		{
			get
			{
				return this._GUID;
			}
			set
			{
				if ((this._GUID != value))
				{
					this.OnGUIDChanging(value);
					this.SendPropertyChanging();
					this._GUID = value;
					this.SendPropertyChanged("GUID");
					this.OnGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(50)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecurityLevelID", DbType="Int")]
		public System.Nullable<int> SecurityLevelID
		{
			get
			{
				return this._SecurityLevelID;
			}
			set
			{
				if ((this._SecurityLevelID != value))
				{
					this.OnSecurityLevelIDChanging(value);
					this.SendPropertyChanging();
					this._SecurityLevelID = value;
					this.SendPropertyChanged("SecurityLevelID");
					this.OnSecurityLevelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ChangedBy
		{
			get
			{
				return this._ChangedBy;
			}
			set
			{
				if ((this._ChangedBy != value))
				{
					this.OnChangedByChanging(value);
					this.SendPropertyChanging();
					this._ChangedBy = value;
					this.SendPropertyChanged("ChangedBy");
					this.OnChangedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedOn", DbType="DateTime NOT NULL")]
		public System.DateTime ChangedOn
		{
			get
			{
				return this._ChangedOn;
			}
			set
			{
				if ((this._ChangedOn != value))
				{
					this.OnChangedOnChanging(value);
					this.SendPropertyChanging();
					this._ChangedOn = value;
					this.SendPropertyChanged("ChangedOn");
					this.OnChangedOnChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.s_Locations")]
	public partial class s_Locations : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _LocationGUID;
		
		private string _Location;
		
		private string _Description;
		
		private bool _Active;
		
		private string _ChangedBy;
		
		private System.DateTime _ChangedOn;
		
		private EntitySet<OPS_T_Equipment> _OPS_T_Equipment;
		
		private EntitySet<s_ProjectLocations> _s_ProjectLocations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLocationGUIDChanging(System.Guid value);
    partial void OnLocationGUIDChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnChangedByChanging(string value);
    partial void OnChangedByChanged();
    partial void OnChangedOnChanging(System.DateTime value);
    partial void OnChangedOnChanged();
    #endregion
		
		public s_Locations()
		{
			this._OPS_T_Equipment = new EntitySet<OPS_T_Equipment>(new Action<OPS_T_Equipment>(this.attach_OPS_T_Equipment), new Action<OPS_T_Equipment>(this.detach_OPS_T_Equipment));
			this._s_ProjectLocations = new EntitySet<s_ProjectLocations>(new Action<s_ProjectLocations>(this.attach_s_ProjectLocations), new Action<s_ProjectLocations>(this.detach_s_ProjectLocations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationGUID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid LocationGUID
		{
			get
			{
				return this._LocationGUID;
			}
			set
			{
				if ((this._LocationGUID != value))
				{
					this.OnLocationGUIDChanging(value);
					this.SendPropertyChanging();
					this._LocationGUID = value;
					this.SendPropertyChanged("LocationGUID");
					this.OnLocationGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ChangedBy
		{
			get
			{
				return this._ChangedBy;
			}
			set
			{
				if ((this._ChangedBy != value))
				{
					this.OnChangedByChanging(value);
					this.SendPropertyChanging();
					this._ChangedBy = value;
					this.SendPropertyChanged("ChangedBy");
					this.OnChangedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedOn", DbType="DateTime NOT NULL")]
		public System.DateTime ChangedOn
		{
			get
			{
				return this._ChangedOn;
			}
			set
			{
				if ((this._ChangedOn != value))
				{
					this.OnChangedOnChanging(value);
					this.SendPropertyChanging();
					this._ChangedOn = value;
					this.SendPropertyChanged("ChangedOn");
					this.OnChangedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="s_Locations_OPS_T_Equipment", Storage="_OPS_T_Equipment", ThisKey="LocationGUID", OtherKey="LocationGUID")]
		public EntitySet<OPS_T_Equipment> OPS_T_Equipment
		{
			get
			{
				return this._OPS_T_Equipment;
			}
			set
			{
				this._OPS_T_Equipment.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="s_Locations_s_ProjectLocations", Storage="_s_ProjectLocations", ThisKey="LocationGUID", OtherKey="LocationGUID")]
		public EntitySet<s_ProjectLocations> s_ProjectLocations
		{
			get
			{
				return this._s_ProjectLocations;
			}
			set
			{
				this._s_ProjectLocations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OPS_T_Equipment(OPS_T_Equipment entity)
		{
			this.SendPropertyChanging();
			entity.s_Locations = this;
		}
		
		private void detach_OPS_T_Equipment(OPS_T_Equipment entity)
		{
			this.SendPropertyChanging();
			entity.s_Locations = null;
		}
		
		private void attach_s_ProjectLocations(s_ProjectLocations entity)
		{
			this.SendPropertyChanging();
			entity.s_Locations = this;
		}
		
		private void detach_s_ProjectLocations(s_ProjectLocations entity)
		{
			this.SendPropertyChanging();
			entity.s_Locations = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.s_NameValue")]
	public partial class s_NameValue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Name;
		
		private string _Value;
		
		private string _ChangedBy;
		
		private System.DateTime _ChangedOn;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnChangedByChanging(string value);
    partial void OnChangedByChanged();
    partial void OnChangedOnChanging(System.DateTime value);
    partial void OnChangedOnChanged();
    #endregion
		
		public s_NameValue()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedBy", DbType="NVarChar(50)")]
		public string ChangedBy
		{
			get
			{
				return this._ChangedBy;
			}
			set
			{
				if ((this._ChangedBy != value))
				{
					this.OnChangedByChanging(value);
					this.SendPropertyChanging();
					this._ChangedBy = value;
					this.SendPropertyChanged("ChangedBy");
					this.OnChangedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedOn", DbType="DateTime NOT NULL")]
		public System.DateTime ChangedOn
		{
			get
			{
				return this._ChangedOn;
			}
			set
			{
				if ((this._ChangedOn != value))
				{
					this.OnChangedOnChanging(value);
					this.SendPropertyChanging();
					this._ChangedOn = value;
					this.SendPropertyChanged("ChangedOn");
					this.OnChangedOnChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.s_People")]
	public partial class s_People : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _GUID;
		
		private string _Username;
		
		private string _Title;
		
		private string _GivenName;
		
		private string _Surname;
		
		private string _Workphone;
		
		private string _Homephone;
		
		private string _Mobile;
		
		private string _Email;
		
		private System.Nullable<System.DateTime> _BirthDate;
		
		private System.Nullable<System.Guid> _GenderClassGUID;
		
		private System.Nullable<int> _EmploymentClassID;
		
		private string _Comments;
		
		private System.Nullable<System.Guid> _OrganisationGUID;
		
		private string _EmployeeID;
		
		private string _OnsiteContact;
		
		private string _OffsiteContact;
		
		private System.Nullable<System.DateTime> _CommencedOn;
		
		private System.Nullable<System.DateTime> _CeasedOn;
		
		private System.Nullable<System.Guid> _SupervisorGUID;
		
		private string _NextofKin;
		
		private string _NextofKinPhone;
		
		private string _StaffContractor;
		
		private bool _Active;
		
		private string _ChangedBy;
		
		private System.DateTime _ChangedOn;
		
		private System.Nullable<int> _PhotoID;
		
		private string _MineHealthNumber;
		
		private System.Nullable<System.Guid> _RoleGUID;
		
		private EntityRef<s_SecurityLevels> _s_SecurityLevels;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGUIDChanging(System.Guid value);
    partial void OnGUIDChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnGivenNameChanging(string value);
    partial void OnGivenNameChanged();
    partial void OnSurnameChanging(string value);
    partial void OnSurnameChanged();
    partial void OnWorkphoneChanging(string value);
    partial void OnWorkphoneChanged();
    partial void OnHomephoneChanging(string value);
    partial void OnHomephoneChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnBirthDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthDateChanged();
    partial void OnGenderClassGUIDChanging(System.Nullable<System.Guid> value);
    partial void OnGenderClassGUIDChanged();
    partial void OnEmploymentClassIDChanging(System.Nullable<int> value);
    partial void OnEmploymentClassIDChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    partial void OnOrganisationGUIDChanging(System.Nullable<System.Guid> value);
    partial void OnOrganisationGUIDChanged();
    partial void OnEmployeeIDChanging(string value);
    partial void OnEmployeeIDChanged();
    partial void OnOnsiteContactChanging(string value);
    partial void OnOnsiteContactChanged();
    partial void OnOffsiteContactChanging(string value);
    partial void OnOffsiteContactChanged();
    partial void OnCommencedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCommencedOnChanged();
    partial void OnCeasedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCeasedOnChanged();
    partial void OnSupervisorGUIDChanging(System.Nullable<System.Guid> value);
    partial void OnSupervisorGUIDChanged();
    partial void OnNextofKinChanging(string value);
    partial void OnNextofKinChanged();
    partial void OnNextofKinPhoneChanging(string value);
    partial void OnNextofKinPhoneChanged();
    partial void OnStaffContractorChanging(string value);
    partial void OnStaffContractorChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnChangedByChanging(string value);
    partial void OnChangedByChanged();
    partial void OnChangedOnChanging(System.DateTime value);
    partial void OnChangedOnChanged();
    partial void OnPhotoIDChanging(System.Nullable<int> value);
    partial void OnPhotoIDChanged();
    partial void OnMineHealthNumberChanging(string value);
    partial void OnMineHealthNumberChanged();
    partial void OnRoleGUIDChanging(System.Nullable<System.Guid> value);
    partial void OnRoleGUIDChanged();
    #endregion
		
		public s_People()
		{
			this._s_SecurityLevels = default(EntityRef<s_SecurityLevels>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GUID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid GUID
		{
			get
			{
				return this._GUID;
			}
			set
			{
				if ((this._GUID != value))
				{
					this.OnGUIDChanging(value);
					this.SendPropertyChanging();
					this._GUID = value;
					this.SendPropertyChanged("GUID");
					this.OnGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(50)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(20)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GivenName", DbType="NVarChar(50)")]
		public string GivenName
		{
			get
			{
				return this._GivenName;
			}
			set
			{
				if ((this._GivenName != value))
				{
					this.OnGivenNameChanging(value);
					this.SendPropertyChanging();
					this._GivenName = value;
					this.SendPropertyChanged("GivenName");
					this.OnGivenNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Surname", DbType="NVarChar(100)")]
		public string Surname
		{
			get
			{
				return this._Surname;
			}
			set
			{
				if ((this._Surname != value))
				{
					this.OnSurnameChanging(value);
					this.SendPropertyChanging();
					this._Surname = value;
					this.SendPropertyChanged("Surname");
					this.OnSurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Workphone", DbType="NVarChar(20)")]
		public string Workphone
		{
			get
			{
				return this._Workphone;
			}
			set
			{
				if ((this._Workphone != value))
				{
					this.OnWorkphoneChanging(value);
					this.SendPropertyChanging();
					this._Workphone = value;
					this.SendPropertyChanged("Workphone");
					this.OnWorkphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Homephone", DbType="NVarChar(20)")]
		public string Homephone
		{
			get
			{
				return this._Homephone;
			}
			set
			{
				if ((this._Homephone != value))
				{
					this.OnHomephoneChanging(value);
					this.SendPropertyChanging();
					this._Homephone = value;
					this.SendPropertyChanged("Homephone");
					this.OnHomephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="NVarChar(20)")]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._Mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(150)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this.OnBirthDateChanging(value);
					this.SendPropertyChanging();
					this._BirthDate = value;
					this.SendPropertyChanged("BirthDate");
					this.OnBirthDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GenderClassGUID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> GenderClassGUID
		{
			get
			{
				return this._GenderClassGUID;
			}
			set
			{
				if ((this._GenderClassGUID != value))
				{
					this.OnGenderClassGUIDChanging(value);
					this.SendPropertyChanging();
					this._GenderClassGUID = value;
					this.SendPropertyChanged("GenderClassGUID");
					this.OnGenderClassGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmploymentClassID", DbType="Int")]
		public System.Nullable<int> EmploymentClassID
		{
			get
			{
				return this._EmploymentClassID;
			}
			set
			{
				if ((this._EmploymentClassID != value))
				{
					this.OnEmploymentClassIDChanging(value);
					this.SendPropertyChanging();
					this._EmploymentClassID = value;
					this.SendPropertyChanged("EmploymentClassID");
					this.OnEmploymentClassIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this.OnCommentsChanging(value);
					this.SendPropertyChanging();
					this._Comments = value;
					this.SendPropertyChanged("Comments");
					this.OnCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganisationGUID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> OrganisationGUID
		{
			get
			{
				return this._OrganisationGUID;
			}
			set
			{
				if ((this._OrganisationGUID != value))
				{
					this.OnOrganisationGUIDChanging(value);
					this.SendPropertyChanging();
					this._OrganisationGUID = value;
					this.SendPropertyChanged("OrganisationGUID");
					this.OnOrganisationGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="NVarChar(20)")]
		public string EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OnsiteContact", DbType="NVarChar(50)")]
		public string OnsiteContact
		{
			get
			{
				return this._OnsiteContact;
			}
			set
			{
				if ((this._OnsiteContact != value))
				{
					this.OnOnsiteContactChanging(value);
					this.SendPropertyChanging();
					this._OnsiteContact = value;
					this.SendPropertyChanged("OnsiteContact");
					this.OnOnsiteContactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OffsiteContact", DbType="NVarChar(50)")]
		public string OffsiteContact
		{
			get
			{
				return this._OffsiteContact;
			}
			set
			{
				if ((this._OffsiteContact != value))
				{
					this.OnOffsiteContactChanging(value);
					this.SendPropertyChanging();
					this._OffsiteContact = value;
					this.SendPropertyChanged("OffsiteContact");
					this.OnOffsiteContactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommencedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CommencedOn
		{
			get
			{
				return this._CommencedOn;
			}
			set
			{
				if ((this._CommencedOn != value))
				{
					this.OnCommencedOnChanging(value);
					this.SendPropertyChanging();
					this._CommencedOn = value;
					this.SendPropertyChanged("CommencedOn");
					this.OnCommencedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CeasedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CeasedOn
		{
			get
			{
				return this._CeasedOn;
			}
			set
			{
				if ((this._CeasedOn != value))
				{
					this.OnCeasedOnChanging(value);
					this.SendPropertyChanging();
					this._CeasedOn = value;
					this.SendPropertyChanged("CeasedOn");
					this.OnCeasedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupervisorGUID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> SupervisorGUID
		{
			get
			{
				return this._SupervisorGUID;
			}
			set
			{
				if ((this._SupervisorGUID != value))
				{
					this.OnSupervisorGUIDChanging(value);
					this.SendPropertyChanging();
					this._SupervisorGUID = value;
					this.SendPropertyChanged("SupervisorGUID");
					this.OnSupervisorGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextofKin", DbType="NVarChar(50)")]
		public string NextofKin
		{
			get
			{
				return this._NextofKin;
			}
			set
			{
				if ((this._NextofKin != value))
				{
					this.OnNextofKinChanging(value);
					this.SendPropertyChanging();
					this._NextofKin = value;
					this.SendPropertyChanged("NextofKin");
					this.OnNextofKinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextofKinPhone", DbType="NVarChar(50)")]
		public string NextofKinPhone
		{
			get
			{
				return this._NextofKinPhone;
			}
			set
			{
				if ((this._NextofKinPhone != value))
				{
					this.OnNextofKinPhoneChanging(value);
					this.SendPropertyChanging();
					this._NextofKinPhone = value;
					this.SendPropertyChanged("NextofKinPhone");
					this.OnNextofKinPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffContractor", DbType="NVarChar(1)")]
		public string StaffContractor
		{
			get
			{
				return this._StaffContractor;
			}
			set
			{
				if ((this._StaffContractor != value))
				{
					this.OnStaffContractorChanging(value);
					this.SendPropertyChanging();
					this._StaffContractor = value;
					this.SendPropertyChanged("StaffContractor");
					this.OnStaffContractorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedBy", DbType="NVarChar(50)")]
		public string ChangedBy
		{
			get
			{
				return this._ChangedBy;
			}
			set
			{
				if ((this._ChangedBy != value))
				{
					this.OnChangedByChanging(value);
					this.SendPropertyChanging();
					this._ChangedBy = value;
					this.SendPropertyChanged("ChangedBy");
					this.OnChangedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedOn", DbType="DateTime NOT NULL")]
		public System.DateTime ChangedOn
		{
			get
			{
				return this._ChangedOn;
			}
			set
			{
				if ((this._ChangedOn != value))
				{
					this.OnChangedOnChanging(value);
					this.SendPropertyChanging();
					this._ChangedOn = value;
					this.SendPropertyChanged("ChangedOn");
					this.OnChangedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhotoID", DbType="Int")]
		public System.Nullable<int> PhotoID
		{
			get
			{
				return this._PhotoID;
			}
			set
			{
				if ((this._PhotoID != value))
				{
					this.OnPhotoIDChanging(value);
					this.SendPropertyChanging();
					this._PhotoID = value;
					this.SendPropertyChanged("PhotoID");
					this.OnPhotoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MineHealthNumber", DbType="NVarChar(20)")]
		public string MineHealthNumber
		{
			get
			{
				return this._MineHealthNumber;
			}
			set
			{
				if ((this._MineHealthNumber != value))
				{
					this.OnMineHealthNumberChanging(value);
					this.SendPropertyChanging();
					this._MineHealthNumber = value;
					this.SendPropertyChanged("MineHealthNumber");
					this.OnMineHealthNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleGUID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> RoleGUID
		{
			get
			{
				return this._RoleGUID;
			}
			set
			{
				if ((this._RoleGUID != value))
				{
					if (this._s_SecurityLevels.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleGUIDChanging(value);
					this.SendPropertyChanging();
					this._RoleGUID = value;
					this.SendPropertyChanged("RoleGUID");
					this.OnRoleGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="s_SecurityLevels_s_People", Storage="_s_SecurityLevels", ThisKey="RoleGUID", OtherKey="GUID", IsForeignKey=true)]
		public s_SecurityLevels s_SecurityLevels
		{
			get
			{
				return this._s_SecurityLevels.Entity;
			}
			set
			{
				s_SecurityLevels previousValue = this._s_SecurityLevels.Entity;
				if (((previousValue != value) 
							|| (this._s_SecurityLevels.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._s_SecurityLevels.Entity = null;
						previousValue.s_People.Remove(this);
					}
					this._s_SecurityLevels.Entity = value;
					if ((value != null))
					{
						value.s_People.Add(this);
						this._RoleGUID = value.GUID;
					}
					else
					{
						this._RoleGUID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("s_SecurityLevels");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.s_ProjectLocations")]
	public partial class s_ProjectLocations : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ProjLocGUID;
		
		private System.Guid _ProjGUID;
		
		private System.Guid _LocationGUID;
		
		private bool _Active;
		
		private string _ChangedBy;
		
		private System.DateTime _ChangedOn;
		
		private EntityRef<s_Locations> _s_Locations;
		
		private EntityRef<s_Projects> _s_Projects;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProjLocGUIDChanging(System.Guid value);
    partial void OnProjLocGUIDChanged();
    partial void OnProjGUIDChanging(System.Guid value);
    partial void OnProjGUIDChanged();
    partial void OnLocationGUIDChanging(System.Guid value);
    partial void OnLocationGUIDChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnChangedByChanging(string value);
    partial void OnChangedByChanged();
    partial void OnChangedOnChanging(System.DateTime value);
    partial void OnChangedOnChanged();
    #endregion
		
		public s_ProjectLocations()
		{
			this._s_Locations = default(EntityRef<s_Locations>);
			this._s_Projects = default(EntityRef<s_Projects>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjLocGUID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ProjLocGUID
		{
			get
			{
				return this._ProjLocGUID;
			}
			set
			{
				if ((this._ProjLocGUID != value))
				{
					this.OnProjLocGUIDChanging(value);
					this.SendPropertyChanging();
					this._ProjLocGUID = value;
					this.SendPropertyChanged("ProjLocGUID");
					this.OnProjLocGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjGUID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ProjGUID
		{
			get
			{
				return this._ProjGUID;
			}
			set
			{
				if ((this._ProjGUID != value))
				{
					if (this._s_Projects.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjGUIDChanging(value);
					this.SendPropertyChanging();
					this._ProjGUID = value;
					this.SendPropertyChanged("ProjGUID");
					this.OnProjGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationGUID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid LocationGUID
		{
			get
			{
				return this._LocationGUID;
			}
			set
			{
				if ((this._LocationGUID != value))
				{
					if (this._s_Locations.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLocationGUIDChanging(value);
					this.SendPropertyChanging();
					this._LocationGUID = value;
					this.SendPropertyChanged("LocationGUID");
					this.OnLocationGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ChangedBy
		{
			get
			{
				return this._ChangedBy;
			}
			set
			{
				if ((this._ChangedBy != value))
				{
					this.OnChangedByChanging(value);
					this.SendPropertyChanging();
					this._ChangedBy = value;
					this.SendPropertyChanged("ChangedBy");
					this.OnChangedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedOn", DbType="DateTime NOT NULL")]
		public System.DateTime ChangedOn
		{
			get
			{
				return this._ChangedOn;
			}
			set
			{
				if ((this._ChangedOn != value))
				{
					this.OnChangedOnChanging(value);
					this.SendPropertyChanging();
					this._ChangedOn = value;
					this.SendPropertyChanged("ChangedOn");
					this.OnChangedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="s_Locations_s_ProjectLocations", Storage="_s_Locations", ThisKey="LocationGUID", OtherKey="LocationGUID", IsForeignKey=true)]
		public s_Locations s_Locations
		{
			get
			{
				return this._s_Locations.Entity;
			}
			set
			{
				s_Locations previousValue = this._s_Locations.Entity;
				if (((previousValue != value) 
							|| (this._s_Locations.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._s_Locations.Entity = null;
						previousValue.s_ProjectLocations.Remove(this);
					}
					this._s_Locations.Entity = value;
					if ((value != null))
					{
						value.s_ProjectLocations.Add(this);
						this._LocationGUID = value.LocationGUID;
					}
					else
					{
						this._LocationGUID = default(System.Guid);
					}
					this.SendPropertyChanged("s_Locations");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="s_Projects_s_ProjectLocations", Storage="_s_Projects", ThisKey="ProjGUID", OtherKey="ProjGUID", IsForeignKey=true)]
		public s_Projects s_Projects
		{
			get
			{
				return this._s_Projects.Entity;
			}
			set
			{
				s_Projects previousValue = this._s_Projects.Entity;
				if (((previousValue != value) 
							|| (this._s_Projects.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._s_Projects.Entity = null;
						previousValue.s_ProjectLocations.Remove(this);
					}
					this._s_Projects.Entity = value;
					if ((value != null))
					{
						value.s_ProjectLocations.Add(this);
						this._ProjGUID = value.ProjGUID;
					}
					else
					{
						this._ProjGUID = default(System.Guid);
					}
					this.SendPropertyChanged("s_Projects");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.s_Projects")]
	public partial class s_Projects : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ProjGUID;
		
		private string _ProjectName;
		
		private string _ProjectNumber;
		
		private string _Description;
		
		private string _Client;
		
		private string _ClientProject;
		
		private System.Guid _LocationGUID;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDatePlanned;
		
		private System.Nullable<System.DateTime> _EndDateActual;
		
		private bool _Active;
		
		private string _ChangedBy;
		
		private System.DateTime _ChangedOn;
		
		private EntitySet<s_WBS> _s_WBS;
		
		private EntitySet<s_ProjectLocations> _s_ProjectLocations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProjGUIDChanging(System.Guid value);
    partial void OnProjGUIDChanged();
    partial void OnProjectNameChanging(string value);
    partial void OnProjectNameChanged();
    partial void OnProjectNumberChanging(string value);
    partial void OnProjectNumberChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnClientChanging(string value);
    partial void OnClientChanged();
    partial void OnClientProjectChanging(string value);
    partial void OnClientProjectChanged();
    partial void OnLocationGUIDChanging(System.Guid value);
    partial void OnLocationGUIDChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDatePlannedChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDatePlannedChanged();
    partial void OnEndDateActualChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateActualChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnChangedByChanging(string value);
    partial void OnChangedByChanged();
    partial void OnChangedOnChanging(System.DateTime value);
    partial void OnChangedOnChanged();
    #endregion
		
		public s_Projects()
		{
			this._s_WBS = new EntitySet<s_WBS>(new Action<s_WBS>(this.attach_s_WBS), new Action<s_WBS>(this.detach_s_WBS));
			this._s_ProjectLocations = new EntitySet<s_ProjectLocations>(new Action<s_ProjectLocations>(this.attach_s_ProjectLocations), new Action<s_ProjectLocations>(this.detach_s_ProjectLocations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjGUID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ProjGUID
		{
			get
			{
				return this._ProjGUID;
			}
			set
			{
				if ((this._ProjGUID != value))
				{
					this.OnProjGUIDChanging(value);
					this.SendPropertyChanging();
					this._ProjGUID = value;
					this.SendPropertyChanged("ProjGUID");
					this.OnProjGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ProjectName
		{
			get
			{
				return this._ProjectName;
			}
			set
			{
				if ((this._ProjectName != value))
				{
					this.OnProjectNameChanging(value);
					this.SendPropertyChanging();
					this._ProjectName = value;
					this.SendPropertyChanged("ProjectName");
					this.OnProjectNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectNumber", DbType="NVarChar(255)")]
		public string ProjectNumber
		{
			get
			{
				return this._ProjectNumber;
			}
			set
			{
				if ((this._ProjectNumber != value))
				{
					this.OnProjectNumberChanging(value);
					this.SendPropertyChanging();
					this._ProjectNumber = value;
					this.SendPropertyChanged("ProjectNumber");
					this.OnProjectNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Client", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Client
		{
			get
			{
				return this._Client;
			}
			set
			{
				if ((this._Client != value))
				{
					this.OnClientChanging(value);
					this.SendPropertyChanging();
					this._Client = value;
					this.SendPropertyChanged("Client");
					this.OnClientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientProject", DbType="NVarChar(255)")]
		public string ClientProject
		{
			get
			{
				return this._ClientProject;
			}
			set
			{
				if ((this._ClientProject != value))
				{
					this.OnClientProjectChanging(value);
					this.SendPropertyChanging();
					this._ClientProject = value;
					this.SendPropertyChanged("ClientProject");
					this.OnClientProjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationGUID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid LocationGUID
		{
			get
			{
				return this._LocationGUID;
			}
			set
			{
				if ((this._LocationGUID != value))
				{
					this.OnLocationGUIDChanging(value);
					this.SendPropertyChanging();
					this._LocationGUID = value;
					this.SendPropertyChanged("LocationGUID");
					this.OnLocationGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDatePlanned", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDatePlanned
		{
			get
			{
				return this._EndDatePlanned;
			}
			set
			{
				if ((this._EndDatePlanned != value))
				{
					this.OnEndDatePlannedChanging(value);
					this.SendPropertyChanging();
					this._EndDatePlanned = value;
					this.SendPropertyChanged("EndDatePlanned");
					this.OnEndDatePlannedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDateActual", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDateActual
		{
			get
			{
				return this._EndDateActual;
			}
			set
			{
				if ((this._EndDateActual != value))
				{
					this.OnEndDateActualChanging(value);
					this.SendPropertyChanging();
					this._EndDateActual = value;
					this.SendPropertyChanged("EndDateActual");
					this.OnEndDateActualChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ChangedBy
		{
			get
			{
				return this._ChangedBy;
			}
			set
			{
				if ((this._ChangedBy != value))
				{
					this.OnChangedByChanging(value);
					this.SendPropertyChanging();
					this._ChangedBy = value;
					this.SendPropertyChanged("ChangedBy");
					this.OnChangedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedOn", DbType="DateTime NOT NULL")]
		public System.DateTime ChangedOn
		{
			get
			{
				return this._ChangedOn;
			}
			set
			{
				if ((this._ChangedOn != value))
				{
					this.OnChangedOnChanging(value);
					this.SendPropertyChanging();
					this._ChangedOn = value;
					this.SendPropertyChanged("ChangedOn");
					this.OnChangedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="s_Projects_s_WBS", Storage="_s_WBS", ThisKey="ProjGUID", OtherKey="ProjGUID")]
		public EntitySet<s_WBS> s_WBS
		{
			get
			{
				return this._s_WBS;
			}
			set
			{
				this._s_WBS.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="s_Projects_s_ProjectLocations", Storage="_s_ProjectLocations", ThisKey="ProjGUID", OtherKey="ProjGUID")]
		public EntitySet<s_ProjectLocations> s_ProjectLocations
		{
			get
			{
				return this._s_ProjectLocations;
			}
			set
			{
				this._s_ProjectLocations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_s_WBS(s_WBS entity)
		{
			this.SendPropertyChanging();
			entity.s_Projects = this;
		}
		
		private void detach_s_WBS(s_WBS entity)
		{
			this.SendPropertyChanging();
			entity.s_Projects = null;
		}
		
		private void attach_s_ProjectLocations(s_ProjectLocations entity)
		{
			this.SendPropertyChanging();
			entity.s_Projects = this;
		}
		
		private void detach_s_ProjectLocations(s_ProjectLocations entity)
		{
			this.SendPropertyChanging();
			entity.s_Projects = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.s_SecurityLevels")]
	public partial class s_SecurityLevels : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _GUID;
		
		private System.Nullable<int> _SecurityLevel;
		
		private string _Name;
		
		private string _ChangedBy;
		
		private System.DateTime _ChangedOn;
		
		private EntitySet<s_People> _s_People;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGUIDChanging(System.Guid value);
    partial void OnGUIDChanged();
    partial void OnSecurityLevelChanging(System.Nullable<int> value);
    partial void OnSecurityLevelChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnChangedByChanging(string value);
    partial void OnChangedByChanged();
    partial void OnChangedOnChanging(System.DateTime value);
    partial void OnChangedOnChanged();
    #endregion
		
		public s_SecurityLevels()
		{
			this._s_People = new EntitySet<s_People>(new Action<s_People>(this.attach_s_People), new Action<s_People>(this.detach_s_People));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GUID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid GUID
		{
			get
			{
				return this._GUID;
			}
			set
			{
				if ((this._GUID != value))
				{
					this.OnGUIDChanging(value);
					this.SendPropertyChanging();
					this._GUID = value;
					this.SendPropertyChanged("GUID");
					this.OnGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecurityLevel", DbType="Int")]
		public System.Nullable<int> SecurityLevel
		{
			get
			{
				return this._SecurityLevel;
			}
			set
			{
				if ((this._SecurityLevel != value))
				{
					this.OnSecurityLevelChanging(value);
					this.SendPropertyChanging();
					this._SecurityLevel = value;
					this.SendPropertyChanged("SecurityLevel");
					this.OnSecurityLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedBy", DbType="NVarChar(50)")]
		public string ChangedBy
		{
			get
			{
				return this._ChangedBy;
			}
			set
			{
				if ((this._ChangedBy != value))
				{
					this.OnChangedByChanging(value);
					this.SendPropertyChanging();
					this._ChangedBy = value;
					this.SendPropertyChanged("ChangedBy");
					this.OnChangedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedOn", DbType="DateTime NOT NULL")]
		public System.DateTime ChangedOn
		{
			get
			{
				return this._ChangedOn;
			}
			set
			{
				if ((this._ChangedOn != value))
				{
					this.OnChangedOnChanging(value);
					this.SendPropertyChanging();
					this._ChangedOn = value;
					this.SendPropertyChanged("ChangedOn");
					this.OnChangedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="s_SecurityLevels_s_People", Storage="_s_People", ThisKey="GUID", OtherKey="RoleGUID")]
		public EntitySet<s_People> s_People
		{
			get
			{
				return this._s_People;
			}
			set
			{
				this._s_People.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_s_People(s_People entity)
		{
			this.SendPropertyChanging();
			entity.s_SecurityLevels = this;
		}
		
		private void detach_s_People(s_People entity)
		{
			this.SendPropertyChanging();
			entity.s_SecurityLevels = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.v_OPS_T_Equipment")]
	public partial class v_OPS_T_Equipment
	{
		
		private System.Guid _EquipGUID;
		
		private string _KGID;
		
		private string _Description;
		
		private string _Category;
		
		private string _Location;
		
		private string _SerialNumber;
		
		private string _Supplier;
		
		private System.Nullable<double> _PurchasePrice;
		
		private string _Certificate;
		
		private System.Nullable<bool> _InService;
		
		private System.Nullable<System.DateTime> _PurchaseDate;
		
		private string _Type;
		
		private string _ChangedBy;
		
		private System.DateTime _ChangedOn;
		
		private int _TagIsCurrent;
		
		public v_OPS_T_Equipment()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EquipGUID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid EquipGUID
		{
			get
			{
				return this._EquipGUID;
			}
			set
			{
				if ((this._EquipGUID != value))
				{
					this._EquipGUID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KGID", DbType="NVarChar(255)")]
		public string KGID
		{
			get
			{
				return this._KGID;
			}
			set
			{
				if ((this._KGID != value))
				{
					this._KGID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="NVarChar(50)")]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this._Category = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this._Location = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerialNumber", DbType="NVarChar(255)")]
		public string SerialNumber
		{
			get
			{
				return this._SerialNumber;
			}
			set
			{
				if ((this._SerialNumber != value))
				{
					this._SerialNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Supplier", DbType="NVarChar(255)")]
		public string Supplier
		{
			get
			{
				return this._Supplier;
			}
			set
			{
				if ((this._Supplier != value))
				{
					this._Supplier = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchasePrice", DbType="Float")]
		public System.Nullable<double> PurchasePrice
		{
			get
			{
				return this._PurchasePrice;
			}
			set
			{
				if ((this._PurchasePrice != value))
				{
					this._PurchasePrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Certificate", DbType="NVarChar(255)")]
		public string Certificate
		{
			get
			{
				return this._Certificate;
			}
			set
			{
				if ((this._Certificate != value))
				{
					this._Certificate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InService", DbType="Bit")]
		public System.Nullable<bool> InService
		{
			get
			{
				return this._InService;
			}
			set
			{
				if ((this._InService != value))
				{
					this._InService = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PurchaseDate
		{
			get
			{
				return this._PurchaseDate;
			}
			set
			{
				if ((this._PurchaseDate != value))
				{
					this._PurchaseDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(50)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ChangedBy
		{
			get
			{
				return this._ChangedBy;
			}
			set
			{
				if ((this._ChangedBy != value))
				{
					this._ChangedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedOn", DbType="DateTime NOT NULL")]
		public System.DateTime ChangedOn
		{
			get
			{
				return this._ChangedOn;
			}
			set
			{
				if ((this._ChangedOn != value))
				{
					this._ChangedOn = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TagIsCurrent", DbType="Int NOT NULL")]
		public int TagIsCurrent
		{
			get
			{
				return this._TagIsCurrent;
			}
			set
			{
				if ((this._TagIsCurrent != value))
				{
					this._TagIsCurrent = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.v_PeopleRole")]
	public partial class v_PeopleRole
	{
		
		private System.Guid _GUID;
		
		private string _Username;
		
		private string _Title;
		
		private string _GivenName;
		
		private string _Surname;
		
		private bool _Active;
		
		private System.Nullable<int> _SecurityLevel;
		
		private string _Name;
		
		public v_PeopleRole()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GUID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid GUID
		{
			get
			{
				return this._GUID;
			}
			set
			{
				if ((this._GUID != value))
				{
					this._GUID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(50)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this._Username = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(20)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GivenName", DbType="NVarChar(50)")]
		public string GivenName
		{
			get
			{
				return this._GivenName;
			}
			set
			{
				if ((this._GivenName != value))
				{
					this._GivenName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Surname", DbType="NVarChar(100)")]
		public string Surname
		{
			get
			{
				return this._Surname;
			}
			set
			{
				if ((this._Surname != value))
				{
					this._Surname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this._Active = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecurityLevel", DbType="Int")]
		public System.Nullable<int> SecurityLevel
		{
			get
			{
				return this._SecurityLevel;
			}
			set
			{
				if ((this._SecurityLevel != value))
				{
					this._SecurityLevel = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
